plugins {
    id 'org.springframework.boot' version '2.1.3.RELEASE'
    id 'java'
    id 'org.sonarqube' version '2.7'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'

group = 'hu.indicium.dev'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.1.3.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.flywaydb:flyway-core'
    implementation 'com.auth0:auth0-spring-security-api:1.3.1'
    implementation 'com.sendgrid:sendgrid-java:4.4.5'
    implementation 'org.modelmapper:modelmapper:2.3.7'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    implementation 'io.springfox:springfox-bean-validators:2.9.2'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}

sonarqube {
    properties {
        property 'sonar.projectKey', 'svIndicium_lit'
        property 'sonar.organization', 'indicium'
        property 'sonar.login', System.getenv('SONAR_TOKEN')
        property 'sonar.host.url', 'https://sonarcloud.io'
        property 'sonar.coverage.exclusions', '**/dto/**/*,**/events/**,**/config/**/*'
        property 'sonar.cpd.exclusions', '**/*Request.java,**/dto/**/*,**/Registration.java'
        property 'sonar.coverage.jacoco.xmlReportPaths', "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
    }
}

jacoco {
    toolVersion = "0.8.4"
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

test {
    useJUnitPlatform()
    testLogging {
        exceptionFormat = 'full'
    }
}
